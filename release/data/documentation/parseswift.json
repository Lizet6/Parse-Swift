{
  "abstract" : [
    {
      "text" : "A pure Swift library that gives you access to the powerful Parse Server backend from your Swift applications.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "ParseSwift",
    "modules" : [
      {
        "name" : "ParseSwift"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "ParseSwift"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "parse-swift.png",
              "type" : "image"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "For more information about the Parse Platform and its features, see the public ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.parseplatform.org",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". The ParseSwift SDK is not a port of the ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/parse-community\/Parse-SDK-iOS-OSX",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and though some of it may feel familiar, it is not backwards compatible and is designed using ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/www.pluralsight.com\/guides\/protocol-oriented-programming-in-swift",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " instead of OOP and reference types. You can learn more about POP by watching ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2015\/408\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/419\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " videos from previous WWDC’s. For more details about ParseSwift, visit the ",
              "type" : "text"
            },
            {
              "identifier" : "http:\/\/parseplatform.org\/Parse-Swift\/release\/documentation\/parseswift\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "To learn how to use or experiment with ParseSwift, you can run and edit the ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/tree\/main\/ParseSwift.playground\/Pages",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". You can use the parse-server in ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/netreconlab\/parse-hipaa\/tree\/parse-swift",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " which has docker compose files (",
              "type" : "text"
            },
            {
              "code" : "docker-compose up",
              "type" : "codeVoice"
            },
            {
              "text" : " gives you a working server) configured to connect with the playground files, has ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/parse-community\/parse-dashboard",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", and can be used with MongoDB or PostgreSQL. You can also configure the Swift Playgrounds to work with your own Parse Server by editing the configuation in ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/e9ba846c399257100b285d25d2bd055628b13b4b\/ParseSwift.playground\/Sources\/Common.swift#L4-L19",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". To learn more, check out ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/main\/CONTRIBUTING.md#swift-playgrounds",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift\/initialize(configuration:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift\/initialize(applicationId:clientKey:masterKey:serverURL:liveQueryServerURL:allowingCustomObjectIds:usingTransactions:usingEqualQueryConstraint:keyValueStore:requestCachePolicy:cacheMemoryCapacity:cacheDiskCapacity:migratingFromObjcSDK:deletingKeychainIfNeeded:httpAdditionalHeaders:maxConnectionAttempts:authentication:)"
      ],
      "title" : "Initialize the SDK"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudViewModel",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLiveQuery",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryViewModel",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Subscription",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/SubscriptionCallback"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudObservable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudType",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Deletable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Fetchable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Objectable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAuthentication",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseCloud",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseConfig",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseInstallation",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseKeyValueStore",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLiveQueryDelegate",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseObject",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseQueryScorable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseRole",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSession",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseType",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseUser",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryObservable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QuerySubscribable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Queryable",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Savable"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/API",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseACL",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAnalytics",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAnonymous",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseApple",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseBytes",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseConfiguration",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseEncoder",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseError",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFacebook",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFile",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFileManager",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGeoPoint",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGitHub",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGoogle",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseHealth",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLDAP",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLinkedIn",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseOperation",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParsePolygon",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseRelation",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseTwitter",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseVersion",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Pointer",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Query",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryConstraint"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/and(queries:)-4ugox",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/and(queries:)-8cafq",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedBy(key:array:)-3irrl",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedBy(key:array:)-4n26y",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedIn(key:array:)-8dz2g",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedIn(key:array:)-f8wn",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsAll(key:array:)-4dl6",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsAll(key:array:)-7bkbc",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsString(key:substring:modifiers:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/doesNotExist(key:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/doesNotMatchKeyInQuery(key:queryKey:query:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/equalTo(key:value:usingEqComparator:)-4uyzv",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/equalTo(key:value:usingEqComparator:)-9w5u0",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/exists(key:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/hasPrefix(key:prefix:modifiers:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/hasSuffix(key:suffix:modifiers:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/isNotNull(key:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/isNull(key:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesKeyInQuery(key:queryKey:query:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesRegex(key:regex:modifiers:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesText(key:text:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesText(key:text:options:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/near(key:geoPoint:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/nor(queries:)-4b4r0",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/nor(queries:)-l87w",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/notContainedIn(key:array:)-12927",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/notContainedIn(key:array:)-2eqxa",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/or(queries:)-1117v",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/or(queries:)-8hqvz",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/polygonContains(key:point:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:object:)-23s9i",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:object:)-6tnr6",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(object:)-3ndwf",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(object:)-9ex2g",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/relative(_:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinGeoBox(key:fromSouthWest:toNortheast:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinKilometers(key:geoPoint:distance:sorted:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinMiles(key:geoPoint:distance:sorted:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinPolygon(key:points:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinPolygon(key:polygon:)",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinRadians(key:geoPoint:distance:sorted:)"
      ],
      "title" : "Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-4oylc",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-55ext",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-6f2gk",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-35foy",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-8pl0h",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-998hz",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_(_:_:)-7h2oj",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_(_:_:)-7v1wq",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_=(_:_:)-1scjp",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_=(_:_:)-85tti"
      ],
      "title" : "Operators"
    },
    {
      "identifiers" : [
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Event",
        "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseTextOption"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parseswift"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.parse.ParseSwift/documentation/ParseSwift": {
  "abstract" : [
    {
      "text" : "A pure Swift library that gives you access to the powerful Parse Server backend from your Swift applications.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseSwift",
  "type" : "topic",
  "url" : "\/documentation\/parseswift"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/!=(_:_:)-4oylc": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key’s value do not match a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " constraint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2neoiyAA15QueryConstraintVSS_AA0D0VyxGtAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-4oylc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/!=(_:_:)-4oylc"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/!=(_:_:)-55ext": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is not equal to a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2neoiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-55ext",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/!=(_:_:)-55ext"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/!=(_:_:)-6f2gk": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is not equal to a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2neoiyAA15QueryConstraintVSS_xtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/!=(_:_:)-6f2gk",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/!=(_:_:)-6f2gk"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/==(_:_:)-35foy": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is equal to a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2eeoiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-35foy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/==(_:_:)-35foy"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/==(_:_:)-8pl0h": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is equal to a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2eeoiyAA15QueryConstraintVSS_xtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-8pl0h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/==(_:_:)-8pl0h"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/==(_:_:)-998hz": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key’s value matches a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " constraint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2eeoiyAA15QueryConstraintVSS_AA0D0VyxGtAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/==(_:_:)-998hz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/==(_:_:)-998hz"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/API": {
  "abstract" : [
    {
      "text" : "The REST API for communicating with a Parse Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "API"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/API",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "API"
    }
  ],
  "role" : "symbol",
  "title" : "API",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/api"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/CloudObservable": {
  "abstract" : [
    {
      "text" : "This protocol describes the interface for creating a view model for ",
      "type" : "text"
    },
    {
      "code" : "ParseCloud",
      "type" : "codeVoice"
    },
    {
      "text" : " functions and jobs.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can use this protocol on any custom class of yours, instead of ",
      "type" : "text"
    },
    {
      "code" : "CloudViewModel",
      "type" : "codeVoice"
    },
    {
      "text" : ", if it fits your use case better.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CloudObservable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudObservable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CloudObservable"
    }
  ],
  "role" : "symbol",
  "title" : "CloudObservable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/cloudobservable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/CloudType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CloudType"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CloudType"
    }
  ],
  "role" : "symbol",
  "title" : "CloudType",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/cloudtype"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/CloudViewModel": {
  "abstract" : [
    {
      "text" : "A default implementation of the ",
      "type" : "text"
    },
    {
      "code" : "CloudCodeObservable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol. Suitable for ",
      "type" : "text"
    },
    {
      "code" : "ObjectObserved",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and can be used as a SwiftUI view model. Also can be used as a Combine publisher. See Apple’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for more details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CloudViewModel"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/CloudViewModel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CloudViewModel"
    }
  ],
  "role" : "symbol",
  "title" : "CloudViewModel",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/cloudviewmodel"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Deletable": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Deletable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Deletable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Deletable"
    }
  ],
  "role" : "symbol",
  "title" : "Deletable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/deletable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Event": {
  "abstract" : [
    {
      "text" : "Represents an update on a specific object from the ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Event"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Event",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Event"
    }
  ],
  "role" : "symbol",
  "title" : "Event",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/event"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Fetchable": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Fetchable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Fetchable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Fetchable"
    }
  ],
  "role" : "symbol",
  "title" : "Fetchable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/fetchable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Objectable": {
  "abstract" : [
    {
      "text" : "The base protocol for a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Objectable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Objectable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Objectable"
    }
  ],
  "role" : "symbol",
  "title" : "Objectable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/objectable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseACL": {
  "abstract" : [
    {
      "code" : "ParseACL",
      "type" : "codeVoice"
    },
    {
      "text" : " is used to control which users can access or modify a particular ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Each ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " has its own ACL. You can grant read and write permissions separately",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to specific users, to groups of users that belong to roles, or you can grant permissions to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "“the public” so that, for example, any user could read a particular object but only a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "particular set of users could write to that object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseACL"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseACL",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseACL"
    }
  ],
  "role" : "symbol",
  "title" : "ParseACL",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseacl"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseAnalytics": {
  "abstract" : [
    {
      "code" : "ParseAnalytics",
      "type" : "codeVoice"
    },
    {
      "text" : " provides an interface to Parse’s logging and analytics backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseAnalytics"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAnalytics",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseAnalytics"
    }
  ],
  "role" : "symbol",
  "title" : "ParseAnalytics",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseanalytics"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseAnonymous": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with Anonymously logged-in users.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseAnonymous"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAnonymous",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseAnonymous"
    }
  ],
  "role" : "symbol",
  "title" : "ParseAnonymous",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseanonymous"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseApple": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with Apple User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-sign-in-with-apple",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring Apple sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseApple",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/authenticationservices\/implementing_user_authentication_with_sign_in_with_apple",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseApple"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseApple",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseApple"
    }
  ],
  "role" : "symbol",
  "title" : "ParseApple",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseapple"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseAuthentication": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseAuthentication",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol provide",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "convenience implementations for using 3rd party authentication methods.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The authentication methods supported by the Parse Server can be found",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#oauth-and-3rd-party-authentication",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseAuthentication"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseAuthentication",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseAuthentication"
    }
  ],
  "role" : "symbol",
  "title" : "ParseAuthentication",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseauthentication"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseBytes": {
  "abstract" : [
    {
      "code" : "ParseBytes",
      "type" : "codeVoice"
    },
    {
      "text" : " is used to store base 64 data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseBytes"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseBytes",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseBytes"
    }
  ],
  "role" : "symbol",
  "title" : "ParseBytes",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsebytes"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseCloud": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseCloud",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol are able to call Parse Cloud Functions and Jobs.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "An object should be instantiated for each function and job type. When conforming to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ParseCloud",
      "type" : "codeVoice"
    },
    {
      "text" : ", any properties added will be passed as parameters to your Cloud Function or Job.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseCloud"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseCloud",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseCloud"
    }
  ],
  "role" : "symbol",
  "title" : "ParseCloud",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsecloud"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseConfig": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseConfig",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol are able to access the Config on the Parse Server.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "When conforming to ",
      "type" : "text"
    },
    {
      "code" : "ParseConfig",
      "type" : "codeVoice"
    },
    {
      "text" : ", any properties added can be retrieved by the client or updated on",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseConfig"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseConfig",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseConfig"
    }
  ],
  "role" : "symbol",
  "title" : "ParseConfig",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseconfig"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseConfiguration": {
  "abstract" : [
    {
      "text" : "The Configuration for a Parse client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseConfiguration"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseConfiguration",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseConfiguration"
    }
  ],
  "role" : "symbol",
  "title" : "ParseConfiguration",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseconfiguration"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseEncoder": {
  "abstract" : [
    {
      "text" : "An object that encodes Parse instances of a data type as JSON objects.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseEncoder"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "ParseEncoder",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseencoder"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseError": {
  "abstract" : [
    {
      "text" : "An object with a Parse code and message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseError"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseError"
    }
  ],
  "role" : "symbol",
  "title" : "ParseError",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseerror"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseFacebook": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with Facebook User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#facebook-authdata",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring Facebook sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseFacebook",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developers.facebook.com\/docs\/facebook-login\/limited-login",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseFacebook"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFacebook",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseFacebook"
    }
  ],
  "role" : "symbol",
  "title" : "ParseFacebook",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsefacebook"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseFile": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ParseFile",
      "type" : "codeVoice"
    },
    {
      "text" : " object representes a file of binary data stored on the Parse server.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This can be a image, video, or anything else that an application needs to reference in a non-relational way.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseFile"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFile",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseFile"
    }
  ],
  "role" : "symbol",
  "title" : "ParseFile",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsefile"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseFileManager": {
  "abstract" : [
    {
      "text" : "Manages Parse files and directories.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseFileManager"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseFileManager",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseFileManager"
    }
  ],
  "role" : "symbol",
  "title" : "ParseFileManager",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsefilemanager"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseGeoPoint": {
  "abstract" : [
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : " is used to embed a latitude \/ longitude point as the value for a key in a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It could be used to perform queries in a geospatial manner using ",
      "type" : "text"
    },
    {
      "code" : "ParseQuery.whereKey:nearGeoPoint:",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseGeoPoint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGeoPoint",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseGeoPoint"
    }
  ],
  "role" : "symbol",
  "title" : "ParseGeoPoint",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsegeopoint"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseGitHub": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with GitHub User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#github-authdata",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring GitHub sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseGitHub",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.github.com\/en\/developers\/apps\/building-oauth-apps\/authorizing-oauth-apps",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseGitHub"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGitHub",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseGitHub"
    }
  ],
  "role" : "symbol",
  "title" : "ParseGitHub",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsegithub"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseGoogle": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with Google User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#google-authdata",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring Google sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseGoogle",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developers.google.com\/identity\/protocols\/oauth2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseGoogle"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseGoogle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseGoogle"
    }
  ],
  "role" : "symbol",
  "title" : "ParseGoogle",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsegoogle"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseHealth": {
  "abstract" : [
    {
      "code" : "ParseHealth",
      "type" : "codeVoice"
    },
    {
      "text" : " allows you to check the health of a Parse Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseHealth"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseHealth",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseHealth"
    }
  ],
  "role" : "symbol",
  "title" : "ParseHealth",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsehealth"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseInstallation": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseInstallation",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol have a local representation of an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "installation persisted to the Parse cloud. This protocol inherits from the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol, and retains the same functionality of a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ", but also extends",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "it with installation-specific fields and related immutability and validity",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "checks.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseInstallation"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseInstallation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseInstallation"
    }
  ],
  "role" : "symbol",
  "title" : "ParseInstallation",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseinstallation"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseKeyValueStore": {
  "abstract" : [
    {
      "text" : "A store that supports key\/value storage. It should be able",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to handle any object that conforms to encodable and decodable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseKeyValueStore"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseKeyValueStore",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseKeyValueStore"
    }
  ],
  "role" : "symbol",
  "title" : "ParseKeyValueStore",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsekeyvaluestore"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseLDAP": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with LDAP User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-ldap",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseLDAP"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLDAP",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseLDAP"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLDAP",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseldap"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseLinkedIn": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with LinkedIn User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#linkedin-authdata",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring LinkedIn sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseLinkedIn",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.microsoft.com\/en-us\/linkedin\/shared\/authentication\/authentication?context=linkedin\/consumer\/context",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseLinkedIn"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLinkedIn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseLinkedIn"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLinkedIn",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselinkedin"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseLiveQuery": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " class enables two-way communication to a Parse Live Query",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseLiveQuery"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLiveQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseLiveQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLiveQuery",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequery"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseLiveQueryDelegate": {
  "abstract" : [
    {
      "text" : "Receive\/respond to notifications from the ParseLiveQuery Server.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseLiveQueryDelegate"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseLiveQueryDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseLiveQueryDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ParseLiveQueryDelegate",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parselivequerydelegate"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseObject": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol have a local representation of data persisted to the Parse cloud.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is the main protocol that is used to interact with objects in your app.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseObject"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseObject"
    }
  ],
  "role" : "symbol",
  "title" : "ParseObject",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseobject"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseOperation": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "ParseOperation",
      "type" : "codeVoice"
    },
    {
      "text" : " represents a modification to a value in a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For example, setting, deleting, or incrementing a value are all ",
      "type" : "text"
    },
    {
      "code" : "ParseOperation",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ParseOperation",
      "type" : "codeVoice"
    },
    {
      "text" : " themselves can be considered to be immutable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseOperation"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseOperation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseOperation"
    }
  ],
  "role" : "symbol",
  "title" : "ParseOperation",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseoperation"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParsePolygon": {
  "abstract" : [
    {
      "code" : "ParsePolygon",
      "type" : "codeVoice"
    },
    {
      "text" : " is used to create a polygon that represents the coordinates",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that may be associated with a key in a ParseObject or used as a reference point",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for geo queries. This allows proximity-based queries on the key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsePolygon"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParsePolygon",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsePolygon"
    }
  ],
  "role" : "symbol",
  "title" : "ParsePolygon",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsepolygon"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseQueryScorable": {
  "abstract" : [
    {
      "text" : "Conform to this protocol to add the required properties to your ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for using ",
      "type" : "text"
    },
    {
      "code" : "QueryConstraint.matchesText()",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "Query.sortByTextScore()",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseQueryScorable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseQueryScorable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseQueryScorable"
    }
  ],
  "role" : "symbol",
  "title" : "ParseQueryScorable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsequeryscorable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseRelation": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ParseRelation",
      "type" : "codeVoice"
    },
    {
      "text" : " object that is used to access all of the children of a many-to-many relationship.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Each instance of ",
      "type" : "text"
    },
    {
      "code" : "ParseRelation",
      "type" : "codeVoice"
    },
    {
      "text" : " is associated with a particular parent object and key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseRelation"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseRelation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseRelation"
    }
  ],
  "role" : "symbol",
  "title" : "ParseRelation",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parserelation"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseRole": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseRole",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol represent a Role on the Parse Server.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ParseRole",
      "type" : "codeVoice"
    },
    {
      "text" : "’s represent groupings of ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : " objects for the purposes of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "granting permissions (e.g. specifying a ",
      "type" : "text"
    },
    {
      "code" : "ParseACL",
      "type" : "codeVoice"
    },
    {
      "text" : " for a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ").",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Roles are specified by their sets of child users and child roles,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "all of which are granted any permissions that the parent role has.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Roles must have a name (which cannot be changed after creation of the role),",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and must specify a ",
      "type" : "text"
    },
    {
      "code" : "ParseACL",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseRole"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseRole",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseRole"
    }
  ],
  "role" : "symbol",
  "title" : "ParseRole",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parserole"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseSession": {
  "abstract" : [
    {
      "code" : "ParseSession",
      "type" : "codeVoice"
    },
    {
      "text" : " is a local representation of a session.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This protocol conforms to ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " and retains the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "same functionality.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseSession"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSession",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseSession"
    }
  ],
  "role" : "symbol",
  "title" : "ParseSession",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsesession"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseSwift": {
  "abstract" : [
    {
      "code" : "ParseSwift",
      "type" : "codeVoice"
    },
    {
      "text" : " contains static methods to handle global configuration for the Parse framework.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseSwift"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseSwift"
    }
  ],
  "role" : "symbol",
  "title" : "ParseSwift",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseswift"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseSwift/initialize(applicationId:clientKey:masterKey:serverURL:liveQueryServerURL:allowingCustomObjectIds:usingTransactions:usingEqualQueryConstraint:keyValueStore:requestCachePolicy:cacheMemoryCapacity:cacheDiskCapacity:migratingFromObjcSDK:deletingKeychainIfNeeded:httpAdditionalHeaders:maxConnectionAttempts:authentication:)": {
  "abstract" : [
    {
      "text" : "Configure the Parse Swift client. This should only be used when starting your app. Typically in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "application(... didFinishLaunchingWithOptions launchOptions...)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "initialize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "applicationId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "clientKey"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "masterKey"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "serverURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "liveQueryServerURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "allowingCustomObjectIds"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "usingTransactions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "usingEqualQueryConstraint"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "keyValueStore"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A13KeyValueStoreP",
      "text" : "ParseKeyValueStore"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "requestCachePolicy"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation10URLRequestV",
      "text" : "URLRequest"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation10URLRequestV11CachePolicya",
      "text" : "CachePolicy"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheMemoryCapacity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "cacheDiskCapacity"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "migratingFromObjcSDK"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "deletingKeychainIfNeeded"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "httpAdditionalHeaders"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s11AnyHashableV",
      "text" : "AnyHashable"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "]?, "
    },
    {
      "kind" : "externalParam",
      "text" : "maxConnectionAttempts"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "authentication"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSURLAuthenticationChallenge",
      "text" : "URLAuthenticationChallenge"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSURLSession",
      "text" : "URLSession"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@E@NSURLSessionAuthChallengeDisposition",
      "text" : "AuthChallengeDisposition"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)NSURLCredential",
      "text" : "URLCredential"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift\/initialize(applicationId:clientKey:masterKey:serverURL:liveQueryServerURL:allowingCustomObjectIds:usingTransactions:usingEqualQueryConstraint:keyValueStore:requestCachePolicy:cacheMemoryCapacity:cacheDiskCapacity:migratingFromObjcSDK:deletingKeychainIfNeeded:httpAdditionalHeaders:maxConnectionAttempts:authentication:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "initialize(applicationId:clientKey:masterKey:serverURL:liveQueryServerURL:allowingCustomObjectIds:usingTransactions:usingEqualQueryConstraint:keyValueStore:requestCachePolicy:cacheMemoryCapacity:cacheDiskCapacity:migratingFromObjcSDK:deletingKeychainIfNeeded:httpAdditionalHeaders:maxConnectionAttempts:authentication:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseswift\/initialize(applicationid:clientkey:masterkey:serverurl:livequeryserverurl:allowingcustomobjectids:usingtransactions:usingequalqueryconstraint:keyvaluestore:requestcachepolicy:cachememorycapacity:cachediskcapacity:migratingfromobjcsdk:deleti-97083"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseSwift/initialize(configuration:)": {
  "abstract" : [
    {
      "text" : "Configure the Parse Swift client. This should only be used when starting your app. Typically in the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "application(... didFinishLaunchingWithOptions launchOptions...)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "initialize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "configuration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A13ConfigurationV",
      "text" : "ParseConfiguration"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseSwift\/initialize(configuration:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "initialize(configuration:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseswift\/initialize(configuration:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseTextOption": {
  "abstract" : [
    {
      "text" : "Options used to constrain a text search.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseTextOption"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseTextOption",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseTextOption"
    }
  ],
  "role" : "symbol",
  "title" : "ParseTextOption",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsetextoption"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseTwitter": {
  "abstract" : [
    {
      "text" : "Provides utility functions for working with Twitter User Authentication and ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Be sure your Parse Server is configured for ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#twitter-authdata",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For information on acquiring Twitter sign-in credentials to use with ",
      "type" : "text"
    },
    {
      "code" : "ParseTwitter",
      "type" : "codeVoice"
    },
    {
      "text" : ", refer to ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.twitter.com\/en\/docs\/authentication\/guides\/log-in-with-twitter",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseTwitter"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseTwitter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseTwitter"
    }
  ],
  "role" : "symbol",
  "title" : "ParseTwitter",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsetwitter"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseType"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseType"
    }
  ],
  "role" : "symbol",
  "title" : "ParseType",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parsetype"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseUser": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "ParseUser",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol have a local representation of a user persisted to the Parse Data.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This protocol inherits from the ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol, and retains the same functionality of a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "but also extends it with various user specific methods, like authentication, signing up, and validation uniqueness.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseUser"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseUser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseUser"
    }
  ],
  "role" : "symbol",
  "title" : "ParseUser",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseuser"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/ParseVersion": {
  "abstract" : [
    {
      "code" : "ParseVersion",
      "type" : "codeVoice"
    },
    {
      "text" : " is used to determine the version of the SDK.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParseVersion"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/ParseVersion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParseVersion"
    }
  ],
  "role" : "symbol",
  "title" : "ParseVersion",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/parseversion"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Pointer": {
  "abstract" : [
    {
      "text" : "A Pointer referencing a ParseObject.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Pointer"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Pointer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Pointer"
    }
  ],
  "role" : "symbol",
  "title" : "Pointer",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/pointer"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Query": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " class defines a query that is used to query for ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Query"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Query",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Query"
    }
  ],
  "role" : "symbol",
  "title" : "Query",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/query"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/QueryConstraint": {
  "abstract" : [
    {
      "text" : "Used to constrain a query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryConstraint",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QueryConstraint"
    }
  ],
  "role" : "symbol",
  "title" : "QueryConstraint",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/queryconstraint"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/QueryObservable": {
  "abstract" : [
    {
      "text" : "This protocol describes the interface for creating a view model for a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can use this protocol on any custom class of yours, instead of ",
      "type" : "text"
    },
    {
      "code" : "QueryViewModel",
      "type" : "codeVoice"
    },
    {
      "text" : ", if it fits your use case better.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QueryObservable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryObservable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QueryObservable"
    }
  ],
  "role" : "symbol",
  "title" : "QueryObservable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/queryobservable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/QuerySubscribable": {
  "abstract" : [
    {
      "text" : "This protocol describes the interface for handling events from a ",
      "type" : "text"
    },
    {
      "code" : "ParseLiveQuery",
      "type" : "codeVoice"
    },
    {
      "text" : " client.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can use this protocol on any custom class of yours, instead of ",
      "type" : "text"
    },
    {
      "code" : "Subscription",
      "type" : "codeVoice"
    },
    {
      "text" : " or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "SubscriptionCallback",
      "type" : "codeVoice"
    },
    {
      "text" : ", if it fits your use case better.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QuerySubscribable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QuerySubscribable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QuerySubscribable"
    }
  ],
  "role" : "symbol",
  "title" : "QuerySubscribable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/querysubscribable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/QueryViewModel": {
  "abstract" : [
    {
      "text" : "A default implementation of the ",
      "type" : "text"
    },
    {
      "code" : "QueryObservable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol. Suitable for ",
      "type" : "text"
    },
    {
      "code" : "ObjectObserved",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and can be used as a SwiftUI view model. Also can be used as a Combine publisher. See Apple’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for more details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QueryViewModel"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/QueryViewModel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QueryViewModel"
    }
  ],
  "role" : "symbol",
  "title" : "QueryViewModel",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/queryviewmodel"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Queryable": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Queryable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Queryable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Queryable"
    }
  ],
  "role" : "symbol",
  "title" : "Queryable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/queryable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Savable": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Savable"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Savable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Savable"
    }
  ],
  "role" : "symbol",
  "title" : "Savable",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/savable"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/Subscription": {
  "abstract" : [
    {
      "text" : "A default implementation of the ",
      "type" : "text"
    },
    {
      "code" : "QuerySubscribable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol. Suitable for ",
      "type" : "text"
    },
    {
      "code" : "ObjectObserved",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as the subscription can be used as a SwiftUI publisher. Meaning it can serve",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "indepedently as a ViewModel in MVVM. Also can be used as a Combine publisher. See Apple’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for more details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Subscription"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/Subscription",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Subscription"
    }
  ],
  "role" : "symbol",
  "title" : "Subscription",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscription"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/SubscriptionCallback": {
  "abstract" : [
    {
      "text" : "A default implementation of the ",
      "type" : "text"
    },
    {
      "code" : "QuerySubscribable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol using closures for callbacks.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SubscriptionCallback"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/SubscriptionCallback",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SubscriptionCallback"
    }
  ],
  "role" : "symbol",
  "title" : "SubscriptionCallback",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/subscriptioncallback"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/_(_:_:)-7h2oj": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is greater than a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift1goiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_(_:_:)-7h2oj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/_(_:_:)-7h2oj"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/_(_:_:)-7v1wq": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is less than a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift1loiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_(_:_:)-7v1wq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/_(_:_:)-7v1wq"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/_=(_:_:)-1scjp": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is less than or equal to a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2leoiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_=(_:_:)-1scjp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/_=(_:_:)-1scjp"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/_=(_:_:)-85tti": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is greater than or equal to a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2geoiyAA15QueryConstraintVSS_xtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/_=(_:_:)-85tti",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/_=(_:_:)-85tti"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/and(queries:)-4ugox": {
  "abstract" : [
    {
      "text" : "Constructs a Query that is the ",
      "type" : "text"
    },
    {
      "code" : "and",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3and7queriesAA15QueryConstraintVSayAA0E0VyxGG_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/and(queries:)-4ugox",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "and(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/and(queries:)-4ugox"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/and(queries:)-8cafq": {
  "abstract" : [
    {
      "text" : "Constructs a Query that is the ",
      "type" : "text"
    },
    {
      "code" : "and",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "and"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3and7queriesAA15QueryConstraintVAA0E0VyxGd_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/and(queries:)-8cafq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "and(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/and(queries:)-8cafq"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containedBy(key:array:)-3irrl": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to be contained by the provided array of ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : "’s.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Get objects where all array elements match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containedBy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containedBy3key5arrayAA15QueryConstraintVSS_SayxGtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedBy(key:array:)-3irrl",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containedBy(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containedby(key:array:)-3irrl"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containedBy(key:array:)-4n26y": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to be contained by the provided array. Get objects where all array elements match.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containedBy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containedBy3key5arrayAA15QueryConstraintVSS_SayxGtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedBy(key:array:)-4n26y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containedBy(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containedby(key:array:)-4n26y"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containedIn(key:array:)-8dz2g": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to be contained in the provided array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containedIn"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containedIn3key5arrayAA15QueryConstraintVSS_SayxGtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedIn(key:array:)-8dz2g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containedIn(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containedin(key:array:)-8dz2g"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containedIn(key:array:)-f8wn": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to be contained in the provided array of ",
      "type" : "text"
    },
    {
      "code" : "ParseObjects",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containedIn"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containedIn3key5arrayAA15QueryConstraintVSS_SayxGtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containedIn(key:array:)-f8wn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containedIn(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containedin(key:array:)-f8wn"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containsAll(key:array:)-4dl6": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s array",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "contains every element of the provided array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAll"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containsAll3key5arrayAA15QueryConstraintVSS_SayxGtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsAll(key:array:)-4dl6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAll(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containsall(key:array:)-4dl6"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containsAll(key:array:)-7bkbc": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s array",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "contains every element of the provided array of `ParseObject’s.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAll"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift11containsAll3key5arrayAA15QueryConstraintVSS_SayxGtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsAll(key:array:)-7bkbc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAll(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containsall(key:array:)-7bkbc"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/containsString(key:substring:modifiers:)": {
  "abstract" : [
    {
      "text" : "Add a constraint for finding string values that contain a provided substring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsString"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "substring"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "modifiers"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/containsString(key:substring:modifiers:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsString(key:substring:modifiers:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/containsstring(key:substring:modifiers:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/doesNotExist(key:)": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key  to not be equal to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "undefined",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "doesNotExist"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/doesNotExist(key:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "doesNotExist(key:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/doesnotexist(key:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/doesNotMatchKeyInQuery(key:queryKey:query:)": {
  "abstract" : [
    {
      "text" : "Adds a constraint that requires that a key’s value ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " match a value in another key",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in objects returned by a sub query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "doesNotMatchKeyInQuery"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "queryKey"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "query"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift22doesNotMatchKeyInQuery3key05queryF00J0AA0H10ConstraintVSS_SSAA0H0VyxGtAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/doesNotMatchKeyInQuery(key:queryKey:query:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "doesNotMatchKeyInQuery(key:queryKey:query:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/doesnotmatchkeyinquery(key:querykey:query:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/equalTo(key:value:usingEqComparator:)-4uyzv": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is equal to a value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equalTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7equalTo3key5value17usingEqComparatorAA15QueryConstraintVSS_xSbtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "usingEqComparator"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/equalTo(key:value:usingEqComparator:)-4uyzv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equalTo(key:value:usingEqComparator:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/equalto(key:value:usingeqcomparator:)-4uyzv"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/equalTo(key:value:usingEqComparator:)-9w5u0": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is equal to a ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equalTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7equalTo3key5value17usingEqComparatorAA15QueryConstraintVSS_xSbtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "usingEqComparator"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/equalTo(key:value:usingEqComparator:)-9w5u0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equalTo(key:value:usingEqComparator:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/equalto(key:value:usingeqcomparator:)-9w5u0"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/exists(key:)": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a particular key to be equal to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "undefined",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "exists"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/exists(key:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "exists(key:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/exists(key:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/hasPrefix(key:prefix:modifiers:)": {
  "abstract" : [
    {
      "text" : "Add a constraint for finding string values that start with a provided prefix.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This will use smart indexing, so it will be fast for large datasets.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasPrefix"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "prefix"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "modifiers"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/hasPrefix(key:prefix:modifiers:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasPrefix(key:prefix:modifiers:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/hasprefix(key:prefix:modifiers:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/hasSuffix(key:suffix:modifiers:)": {
  "abstract" : [
    {
      "text" : "Add a constraint for finding string values that end with a provided suffix.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasSuffix"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "suffix"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "modifiers"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/hasSuffix(key:suffix:modifiers:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasSuffix(key:suffix:modifiers:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/hassuffix(key:suffix:modifiers:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/isNotNull(key:)": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is not equal to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "null",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "undefined",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isNotNull"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/isNotNull(key:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isNotNull(key:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/isnotnull(key:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/isNull(key:)": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires that a key is equal to ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "null",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "undefined",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isNull"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/isNull(key:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isNull(key:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/isnull(key:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/matchesKeyInQuery(key:queryKey:query:)": {
  "abstract" : [
    {
      "text" : "Adds a constraint that requires that a key’s value matches a value in another key",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in objects returned by a sub query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchesKeyInQuery"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "queryKey"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "query"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift17matchesKeyInQuery3key05queryD00H0AA0F10ConstraintVSS_SSAA0F0VyxGtAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesKeyInQuery(key:queryKey:query:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchesKeyInQuery(key:queryKey:query:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/matcheskeyinquery(key:querykey:query:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/matchesRegex(key:regex:modifiers:)": {
  "abstract" : [
    {
      "text" : "Add a regular expression constraint for finding string values that match the provided regular expression.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchesRegex"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "regex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "modifiers"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesRegex(key:regex:modifiers:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchesRegex(key:regex:modifiers:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/matchesregex(key:regex:modifiers:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/matchesText(key:text:)": {
  "abstract" : [
    {
      "text" : "Add a constraint for finding string values that contain a provided",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "string using Full Text Search.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchesText"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "text"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesText(key:text:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchesText(key:text:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/matchestext(key:text:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/matchesText(key:text:options:)": {
  "abstract" : [
    {
      "text" : "Add a constraint for finding string values that contain a provided",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "string using Full Text Search.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchesText"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "text"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A10TextOptionO",
      "text" : "ParseTextOption"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SE",
      "text" : "Encodable"
    },
    {
      "kind" : "text",
      "text" : "]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/matchesText(key:text:options:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchesText(key:text:options:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/matchestext(key:text:options:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/near(key:geoPoint:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s coordinates (specified via ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be near a reference point. Distance is calculated based on angular distance on a sphere. Results will be sorted",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by distance from reference point.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "near"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "geoPoint"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/near(key:geoPoint:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "near(key:geoPoint:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/near(key:geopoint:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/nor(queries:)-4b4r0": {
  "abstract" : [
    {
      "text" : "Returns a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " that is the ",
      "type" : "text"
    },
    {
      "code" : "nor",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nor"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3nor7queriesAA15QueryConstraintVSayAA0E0VyxGG_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/nor(queries:)-4b4r0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nor(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/nor(queries:)-4b4r0"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/nor(queries:)-l87w": {
  "abstract" : [
    {
      "text" : "Returns a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " that is the ",
      "type" : "text"
    },
    {
      "code" : "nor",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nor"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift3nor7queriesAA15QueryConstraintVAA0E0VyxGd_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/nor(queries:)-l87w",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nor(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/nor(queries:)-l87w"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/notContainedIn(key:array:)-12927": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "not be contained in the provided array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "notContainedIn"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift14notContainedIn3key5arrayAA15QueryConstraintVSS_SayxGtSERzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/notContainedIn(key:array:)-12927",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "notContainedIn(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/notcontainedin(key:array:)-12927"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/notContainedIn(key:array:)-2eqxa": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "not be contained in the provided array of ",
      "type" : "text"
    },
    {
      "code" : "ParseObject",
      "type" : "codeVoice"
    },
    {
      "text" : " pointers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "notContainedIn"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "array"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift14notContainedIn3key5arrayAA15QueryConstraintVSS_SayxGtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/notContainedIn(key:array:)-2eqxa",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "notContainedIn(key:array:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/notcontainedin(key:array:)-2eqxa"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/or(queries:)-1117v": {
  "abstract" : [
    {
      "text" : "Returns a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " that is the ",
      "type" : "text"
    },
    {
      "code" : "or",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2or7queriesAA15QueryConstraintVAA0E0VyxGd_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/or(queries:)-1117v",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "or(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/or(queries:)-1117v"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/or(queries:)-8hqvz": {
  "abstract" : [
    {
      "text" : "Returns a ",
      "type" : "text"
    },
    {
      "code" : "Query",
      "type" : "codeVoice"
    },
    {
      "text" : " that is the ",
      "type" : "text"
    },
    {
      "code" : "or",
      "type" : "codeVoice"
    },
    {
      "text" : " of the passed in queries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "queries"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift5QueryV",
      "text" : "Query"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift2or7queriesAA15QueryConstraintVSayAA0E0VyxGG_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/or(queries:)-8hqvz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "or(queries:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/or(queries:)-8hqvz"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/polygonContains(key:point:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "coordinates contains a ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "polygonContains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "point"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/polygonContains(key:point:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "polygonContains(key:point:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/polygoncontains(key:point:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/related(key:)": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key is related.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "related"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "related(key:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/related(key:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/related(key:object:)-23s9i": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key is related.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "related"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "object"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7related3key6objectAA15QueryConstraintVSS_xtKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:object:)-23s9i",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "related(key:object:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/related(key:object:)-23s9i"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/related(key:object:)-6tnr6": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key is related.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "related"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "object"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7PointerV",
      "text" : "Pointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7related3key6objectAA15QueryConstraintVSS_AA7PointerVyxGtAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(key:object:)-6tnr6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "related(key:object:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/related(key:object:)-6tnr6"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/related(object:)-3ndwf": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key is related.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "related"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "object"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7PointerV",
      "text" : "Pointer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7related6objectAA15QueryConstraintVAA7PointerVyxG_tAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(object:)-3ndwf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "related(object:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/related(object:)-3ndwf"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/related(object:)-9ex2g": {
  "abstract" : [
    {
      "text" : "Add a constraint that requires a key is related.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "related"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "object"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift7related6objectAA15QueryConstraintVx_tKAA0A6ObjectRzlF1TL_xmfp",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/related(object:)-9ex2g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "related(object:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/related(object:)-9ex2g"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/relative(_:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s time is related to a specified time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "relative"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/relative(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "relative(_:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/relative(_:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinGeoBox(key:fromSouthWest:toNortheast:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s coordinates (specified via ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ") be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "contained within a given rectangular geographic bounding box.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinGeoBox"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fromSouthWest"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "toNortheast"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinGeoBox(key:fromSouthWest:toNortheast:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinGeoBox(key:fromSouthWest:toNortheast:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withingeobox(key:fromsouthwest:tonortheast:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinKilometers(key:geoPoint:distance:sorted:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s coordinates (specified via ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be near a reference point and within the maximum distance specified (in kilometers). Distance is calculated based",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "on a spherical coordinate system. Results will be sorted by distance (nearest to farthest) from the reference point.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinKilometers"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "geoPoint"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "distance"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinKilometers(key:geoPoint:distance:sorted:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinKilometers(key:geoPoint:distance:sorted:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withinkilometers(key:geopoint:distance:sorted:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinMiles(key:geoPoint:distance:sorted:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s coordinates (specified via ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be near a reference point and within the maximum distance specified (in miles). Distance is calculated based",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "on a spherical coordinate system. Results will be sorted by distance (nearest to farthest) from the reference point.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinMiles"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "geoPoint"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "distance"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinMiles(key:geoPoint:distance:sorted:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinMiles(key:geoPoint:distance:sorted:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withinmiles(key:geopoint:distance:sorted:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinPolygon(key:points:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "coordinates be contained within and on the bounds of a given polygon",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Supports closed and open (last point is connected to first) paths.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinPolygon"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "points"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinPolygon(key:points:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinPolygon(key:points:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withinpolygon(key:points:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinPolygon(key:polygon:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "coordinates be contained within and on the bounds of a given polygon",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Supports closed and open (last point is connected to first) paths.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinPolygon"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "polygon"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A7PolygonV",
      "text" : "ParsePolygon"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinPolygon(key:polygon:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinPolygon(key:polygon:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withinpolygon(key:polygon:)"
},
"doc://com.parse.ParseSwift/documentation/ParseSwift/withinRadians(key:geoPoint:distance:sorted:)": {
  "abstract" : [
    {
      "text" : "Add a constraint to the query that requires a particular key’s coordinates (specified via ",
      "type" : "text"
    },
    {
      "code" : "ParseGeoPoint",
      "type" : "codeVoice"
    },
    {
      "text" : ") be near",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a reference point and within the maximum distance specified (in radians). Distance is calculated based on",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "angular distance on a sphere. Results will be sorted by distance (nearest to farthest) from the reference point.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withinRadians"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "geoPoint"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift0A8GeoPointV",
      "text" : "ParseGeoPoint"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "distance"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10ParseSwift15QueryConstraintV",
      "text" : "QueryConstraint"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.parse.ParseSwift\/documentation\/ParseSwift\/withinRadians(key:geoPoint:distance:sorted:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withinRadians(key:geoPoint:distance:sorted:)",
  "type" : "topic",
  "url" : "\/documentation\/parseswift\/withinradians(key:geopoint:distance:sorted:)"
},
"http://parseplatform.org/Parse-Swift/release/documentation/parseswift/": {
  "identifier" : "http:\/\/parseplatform.org\/Parse-Swift\/release\/documentation\/parseswift\/",
  "title" : "api documentation",
  "titleInlineContent" : [
    {
      "text" : "api documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "http:\/\/parseplatform.org\/Parse-Swift\/release\/documentation\/parseswift\/"
},
"https://developer.apple.com/documentation/authenticationservices/implementing_user_authentication_with_sign_in_with_apple": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/authenticationservices\/implementing_user_authentication_with_sign_in_with_apple",
  "title" : "Apple’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "Apple’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/authenticationservices\/implementing_user_authentication_with_sign_in_with_apple"
},
"https://developer.apple.com/documentation/combine/observableobject": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject",
  "title" : "documentation",
  "titleInlineContent" : [
    {
      "text" : "documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/combine\/observableobject"
},
"https://developer.apple.com/videos/play/wwdc2015/408/": {
  "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2015\/408\/",
  "title" : "Protocol-Oriented Programming in Swift",
  "titleInlineContent" : [
    {
      "text" : "Protocol-Oriented Programming in Swift",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2015\/408\/"
},
"https://developer.apple.com/videos/play/wwdc2016/419/": {
  "identifier" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/419\/",
  "title" : "Protocol and Value Oriented Programming in UIKit Apps",
  "titleInlineContent" : [
    {
      "text" : "Protocol and Value Oriented Programming in UIKit Apps",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/419\/"
},
"https://developer.twitter.com/en/docs/authentication/guides/log-in-with-twitter": {
  "identifier" : "https:\/\/developer.twitter.com\/en\/docs\/authentication\/guides\/log-in-with-twitter",
  "title" : "Twitter’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "Twitter’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.twitter.com\/en\/docs\/authentication\/guides\/log-in-with-twitter"
},
"https://developers.facebook.com/docs/facebook-login/limited-login": {
  "identifier" : "https:\/\/developers.facebook.com\/docs\/facebook-login\/limited-login",
  "title" : "Facebook’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "Facebook’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developers.facebook.com\/docs\/facebook-login\/limited-login"
},
"https://developers.google.com/identity/protocols/oauth2": {
  "identifier" : "https:\/\/developers.google.com\/identity\/protocols\/oauth2",
  "title" : "Google’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "Google’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developers.google.com\/identity\/protocols\/oauth2"
},
"https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps": {
  "identifier" : "https:\/\/docs.github.com\/en\/developers\/apps\/building-oauth-apps\/authorizing-oauth-apps",
  "title" : "GitHub’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "GitHub’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/en\/developers\/apps\/building-oauth-apps\/authorizing-oauth-apps"
},
"https://docs.microsoft.com/en-us/linkedin/shared/authentication/authentication?context=linkedin/consumer/context": {
  "identifier" : "https:\/\/docs.microsoft.com\/en-us\/linkedin\/shared\/authentication\/authentication?context=linkedin\/consumer\/context",
  "title" : "LinkedIn’s Documentation",
  "titleInlineContent" : [
    {
      "text" : "LinkedIn’s Documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.microsoft.com\/en-us\/linkedin\/shared\/authentication\/authentication?context=linkedin\/consumer\/context"
},
"https://docs.parseplatform.org": {
  "identifier" : "https:\/\/docs.parseplatform.org",
  "title" : "documentation",
  "titleInlineContent" : [
    {
      "text" : "documentation",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org"
},
"https://docs.parseplatform.org/parse-server/guide/#configuring-parse-server-for-ldap": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-ldap",
  "title" : "sign in with LDAP",
  "titleInlineContent" : [
    {
      "text" : "sign in with LDAP",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-ldap"
},
"https://docs.parseplatform.org/parse-server/guide/#configuring-parse-server-for-sign-in-with-apple": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-sign-in-with-apple",
  "title" : "sign in with Apple",
  "titleInlineContent" : [
    {
      "text" : "sign in with Apple",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#configuring-parse-server-for-sign-in-with-apple"
},
"https://docs.parseplatform.org/parse-server/guide/#facebook-authdata": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#facebook-authdata",
  "title" : "sign in with Facebook",
  "titleInlineContent" : [
    {
      "text" : "sign in with Facebook",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#facebook-authdata"
},
"https://docs.parseplatform.org/parse-server/guide/#github-authdata": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#github-authdata",
  "title" : "sign in with GitHub",
  "titleInlineContent" : [
    {
      "text" : "sign in with GitHub",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#github-authdata"
},
"https://docs.parseplatform.org/parse-server/guide/#google-authdata": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#google-authdata",
  "title" : "sign in with Google",
  "titleInlineContent" : [
    {
      "text" : "sign in with Google",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#google-authdata"
},
"https://docs.parseplatform.org/parse-server/guide/#linkedin-authdata": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#linkedin-authdata",
  "title" : "sign in with LinkedIn",
  "titleInlineContent" : [
    {
      "text" : "sign in with LinkedIn",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#linkedin-authdata"
},
"https://docs.parseplatform.org/parse-server/guide/#oauth-and-3rd-party-authentication": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#oauth-and-3rd-party-authentication",
  "title" : "here",
  "titleInlineContent" : [
    {
      "text" : "here",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#oauth-and-3rd-party-authentication"
},
"https://docs.parseplatform.org/parse-server/guide/#twitter-authdata": {
  "identifier" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#twitter-authdata",
  "title" : "sign in with Twitter",
  "titleInlineContent" : [
    {
      "text" : "sign in with Twitter",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.parseplatform.org\/parse-server\/guide\/#twitter-authdata"
},
"https://github.com/netreconlab/parse-hipaa/tree/parse-swift": {
  "identifier" : "https:\/\/github.com\/netreconlab\/parse-hipaa\/tree\/parse-swift",
  "title" : "this repo",
  "titleInlineContent" : [
    {
      "text" : "this repo",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/netreconlab\/parse-hipaa\/tree\/parse-swift"
},
"https://github.com/parse-community/Parse-SDK-iOS-OSX": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-SDK-iOS-OSX",
  "title" : "Parse-SDK-iOS-OSX SDK",
  "titleInlineContent" : [
    {
      "text" : "Parse-SDK-iOS-OSX SDK",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-SDK-iOS-OSX"
},
"https://github.com/parse-community/Parse-Swift/blob/e9ba846c399257100b285d25d2bd055628b13b4b/ParseSwift.playground/Sources/Common.swift#L4-L19": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/e9ba846c399257100b285d25d2bd055628b13b4b\/ParseSwift.playground\/Sources\/Common.swift#L4-L19",
  "title" : "Common.swift",
  "titleInlineContent" : [
    {
      "text" : "Common.swift",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/e9ba846c399257100b285d25d2bd055628b13b4b\/ParseSwift.playground\/Sources\/Common.swift#L4-L19"
},
"https://github.com/parse-community/Parse-Swift/blob/main/CONTRIBUTING.md#swift-playgrounds": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/main\/CONTRIBUTING.md#swift-playgrounds",
  "title" : "CONTRIBUTING.md",
  "titleInlineContent" : [
    {
      "text" : "CONTRIBUTING.md",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-Swift\/blob\/main\/CONTRIBUTING.md#swift-playgrounds"
},
"https://github.com/parse-community/Parse-Swift/tree/main/ParseSwift.playground/Pages": {
  "identifier" : "https:\/\/github.com\/parse-community\/Parse-Swift\/tree\/main\/ParseSwift.playground\/Pages",
  "title" : "ParseSwift.playground",
  "titleInlineContent" : [
    {
      "text" : "ParseSwift.playground",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/Parse-Swift\/tree\/main\/ParseSwift.playground\/Pages"
},
"https://github.com/parse-community/parse-dashboard": {
  "identifier" : "https:\/\/github.com\/parse-community\/parse-dashboard",
  "title" : "Parse Dashboard",
  "titleInlineContent" : [
    {
      "text" : "Parse Dashboard",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/parse-community\/parse-dashboard"
},
"https://www.pluralsight.com/guides/protocol-oriented-programming-in-swift": {
  "identifier" : "https:\/\/www.pluralsight.com\/guides\/protocol-oriented-programming-in-swift",
  "title" : "protocol oriented programming (POP) and value types",
  "titleInlineContent" : [
    {
      "text" : "protocol oriented programming (POP) and value types",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/www.pluralsight.com\/guides\/protocol-oriented-programming-in-swift"
},
"parse-swift.png": {
  "alt" : "Parse logo",
  "identifier" : "parse-swift.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/parse-swift.png"
    }
  ]
}
}
}